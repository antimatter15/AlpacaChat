//
//  ChatView.swift
//  AlpacaChatApp
//
//  Created by Yoshimasa Niwa on 3/18/23.
//

import SwiftUI

// Chat interface code generated by ChatGPT!
struct ChatView: View {
    @StateObject
    private var viewModel = ChatViewModel()
    @State
    private var message: String = ""

    var body: some View {
        VStack {
            List {
                ForEach(viewModel.messages) { message in
                    HStack {
                        if message.sender == "You" {
                            Spacer()
                        }

                        VStack(alignment: .leading, spacing: 5) {
                            Text(message.sender)
                                .font(.caption)
                                .foregroundColor(.gray)

                            Text(message.text)
                                .padding(10)
                                .background(Color.gray.opacity(0.2))
                                .cornerRadius(10)
                        }

                        if message.sender != "You" {
                            Spacer()
                        }
                    }
                }
            }

            HStack {
                if viewModel.isLoading {
                    Text("Loading...")
                } else {
                    TextField("Type your message...", text: $message)
                        .textFieldStyle(RoundedBorderTextFieldStyle())
                        .padding(.horizontal)

                    Button {
                        Task {
                            let text = message
                            message = ""
                            try await viewModel.sendMessage(sender: "You", text: text)
                        }
                    } label: {
                        Text("Send")
                            .padding(.horizontal)
                    }
                }
            }
            .padding(.bottom)
        }
        .navigationTitle("Chat")
        .task {
            do {
                try await viewModel.prepare()
            } catch {}
        }
    }
}

struct ChatView_Previews: PreviewProvider {
    static var previews: some View {
        ChatView()
    }
}
